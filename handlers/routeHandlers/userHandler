/**
 * Title: User Handler
 * Description: Handle user creation, get, update and delete requests
 * Author: Saad Ahmed
 * Date: 07-Oct-2022
 */

//module scaffolding
handler = {};

handler.userHandler = (requestProperties, callback) => {
  const acceptedMethods = ["post", "get", "put", "delete"];
  if (acceptedMethods.indexOf(requestProperties.method) > -1) {
    handler._user[requestProperties.method](requestProperties, callback);
  } else {
    callback(405, {
      status: "Failed",
      message: "Method not allowed",
    });
  }
};

handler._user = {};

handler._user.post = (requestProperties, callback) => {
  callback(200, {
    status: "Success",
    message: "This is a post method",
  });
};

handler._user.get = (requestProperties, callback) => {
  callback(200, {
    status: "Success",
    message: "This is a get method",
  });
};

handler._user.put = (requestProperties, callback) => {
  callback(200, {
    status: "Success",
    message: "This is a put method",
  });
};

handler._user.delete = (requestProperties, callback) => {
  callback(200, {
    status: "Success",
    message: "This is a delete method",
  });
};

module.exports = handler;
